package com.kevin.snmp;

import uk.co.westhawk.snmp.stack.*;

import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;

/**
 * @Program: Test
 * @Description:
 * @Author: Liuws
 * @Date: 2023-10-25 10:57:05
 **/
public class TestSnmpByteMessageV2 {

//    private final static Logger logger = LoggerFactory.getLogger(TestSnmpByteMessageV1.class);

    public static void main(String[] args) {
        try {
            String host = "127.0.0.1";
            byte[] message = {48, -126, 7, 110, 2, 1, 1, 4, 6, 112, 117, 98, 108, 105, 99, -89, -126, 7, 95, 2, 1, 1, 2, 1, 0, 2, 1, 0, 48, -126, 7, 82, 48, 14, 6, 8, 43, 6, 1, 2, 1, 1, 3, 0, 2, 2, 121, 55, 48, 45, 6, 10, 43, 6, 1, 6, 3, 1, 1, 4, 1, 0, 4, 31, 49, 46, 51, 46, 54, 46, 49, 46, 52, 46, 49, 46, 50, 48, 49, 49, 46, 50, 46, 50, 53, 49, 46, 50, 48, 46, 50, 46, 49, 46, 49, 48, 30, 6, 7, 43, 6, 1, 2, 1, 1, 1, 4, 19, 50, 48, 50, 51, 45, 49, 48, 45, 50, 53, 32, 49, 52, 58, 53, 55, 58, 50, 55, 48, 23, 6, 7, 43, 6, 1, 2, 1, 1, 2, 4, 12, 116, 101, 115, 116, 83, 110, 109, 112, 84, 114, 97, 112, 48, 41, 6, 7, 43, 6, 1, 2, 1, 1, 3, 4, 30, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 48, -126, 6, -85, 6, 7, 43, 6, 1, 2, 1, 1, 4, 4, -126, 6, -98, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109, 112, 32, 116, 114, 97, 112, 32, 108, 105, 115, 116, 101, 110, 101, 114, 32, 115, 116, 97, 116, 117, 115, 116, 101, 115, 116, 32, 115, 110, 109};
            String messageStr = Arrays.toString(message);
            System.out.println(message.length);
            System.out.println(messageStr.length());
            SnmpContextv2c context;
            context = new SnmpContextv2c(host, 1162);
            TrapPduv2 pdu = (TrapPduv2) context.processIncomingPdu(message);
            if (pdu == null) {
                snmpReceivedTrap(host, "v2", messageStr);
            } else {
                snmpReceivedTrap(pdu, host, "v2", messageStr);
            }
            context.destroy();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void snmpReceivedTrap(Pdu pdu, String host, String version, String message) {
        System.out.println("****************  Receive trap from " + host + "  ****************");

        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        String strDebug = "\r\n";
        strDebug += version + " Trap PDU command......... " + pdu.getMsgType() + "\r\n" + "      " + version + " Trap PDU ID.............. " + pdu.getReqId()
                + "\r\n" + "      " + version + " Trap PDU Length.......... " + pdu.getRequestVarbinds().length + "\r\n";

        int k = pdu.getRequestVarbinds().length;
        int trapInfoType = 0;
        String strNETimestamp = null;
        if (k > 0) {
            strDebug += "Trap VB Information:\r\n";
            for (int i = 0; i < k; i++) {
                varbind vb = pdu.getRequestVarbinds()[i];
                strDebug += "      Varbind[" + i + "] := " + vb.getOid().toString() + " --> " + vb.getValue().toString() + "\r\n";
                if (i == 0) {
                    strNETimestamp = vb.getValue().toString();
                }
            }
        } else {
            //pdu=0
            strDebug += "    Trap PDU message: " + message + "\r\n";
            trapInfoType = 2;
        }
        System.out.println(" " + strDebug);
    }

    public static void snmpReceivedTrap(String host, String version, String message) {
        System.out.println("****************  Receive trap from " + host + "  ****************");
        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String strDebug = "\r\n";
        strDebug += "    Raw PDU message: " + message + "\r\n";
        System.out.println(" " + strDebug);
    }
}
